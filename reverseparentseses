//You have a string s that consists of English letters, punctuation marks, whitespace characters, and brackets. It is guaranteed that the parentheses in s form a regular bracket sequence.

Your task is to reverse the strings contained in each pair of matching parentheses, starting from the innermost pair. The results string should not contain any parentheses.

String reverseParentheses(String s) {
    
     int firstIndex = 0, secondIndex = 0;
        while (s.contains("(")){
           
           // one line using replace function to replace str between () with its reverse starting from the most inner () to the outer one
s = s.replace("("+s.substring(s.lastIndexOf("(")+1, s.indexOf(")", s.lastIndexOf("(")))+")", 
new StringBuffer(s.substring(s.lastIndexOf("(")+1, s.indexOf(")", 
s.lastIndexOf("(")))).reverse().toString());
           

    }
        return s;
     
}
